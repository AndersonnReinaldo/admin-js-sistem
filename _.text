
//GERAR MIGRATIONS E MODELS
    npx sequelize-cli model:generate --name <NOME DO MODEL> --attributes <ATRIBUTOS DO MODEL>

//INICIAR UMA MIGRATION
npx sequelize-cli db:migrate


    npx sequelize-cli model:generate --name Task --attributes due_date:date,effort:integer,title:string,description:text,order:integer,status:enum,user_id:integer,project_id:integer

    name:string, description:string, status:enum,user_id:integer

    due_date:date,effort:integer,title:string,description:text,order:integer,status:enum,user_id:integer,project_id:integer


    'use strict';
module.exports = {
  async up(queryInterface, Sequelize) {
    await queryInterface.createTable('Tasks', {
      id: {
        allowNull: false,
        autoIncrement: true,
        primaryKey: true,
        type: Sequelize.INTEGER
      },
      due_date: {
        allowNull:true,
        type: Sequelize.DATE
      },
      effort: {
        allowNull:true,
        type: Sequelize.INTEGER
      },
      title: {
        type: Sequelize.STRING
      },
      description: {
        allowNull:true,
        type: Sequelize.TEXT
      },
      order: {
        defaultValue:0,
        type: Sequelize.INTEGER
      },
      status: {
        type: Sequelize.ENUM(
          "backlog",
          "doing",
          "done",
          "approved",
          "rejected"
        ),
        defaultValue:"backlog"
      },
      user_id: {
        type: Sequelize.INTEGER,
        references:{ model:'users', key:'id'},
        onUpdate:'CASCADE',
        onDelete:' SET NULL'        
      },
      project_id: {
        type: Sequelize.INTEGER,
        references:{ model:'projects', key:'id'},
        onUpdate:'CASCADE',
        onDelete:'CASCADE'
      },
      createdAt: {
        allowNull: false,
        type: Sequelize.DATE
      },
      updatedAt: {
        allowNull: false,
        type: Sequelize.DATE
      }
    });
  },
  async down(queryInterface, Sequelize) {
    await queryInterface.dropTable('Tasks');
  }
};